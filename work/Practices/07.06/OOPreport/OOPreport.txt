<<< OOP의 이해 / Report 제출 >>>

1. OOP(Object Oriented Programming)

현실 세계 시스템을 가상 환경에서 객체라는 개념으로 표현하는 컴퓨터 프로그래밍의 종류 중 하나이다.


2. Object(객체)

고유의 속성, 상태, 기능을 가지는 물리적, 추상적인 모든 것이다.


3. Class

객체의 공통된 모든 속성, 기능, 행위 등을 추상화 하여 묶어둔 것이다.


4. abstraction(추상화)

사물들의 공통적 특징을 추출하여 하나의 개념으로 만드는 행위이다.
모델링 할 시스템에 종속적으로 추상화 작업이 진행 되는 특징이 있다.


5. Generalization(일반화) / Inheritance(상속)

하위의 객체가 가진 일반적인 특징을 상위 개념으로 부각시켜 하나의 으로 개념화, 계층화 하는 과정이다.


6. Specialization(구체적)

일반화된 특성을 가져와 각자 만이 갖고 있는 속성이나 행위를 추가, 수정하여 구체화 하는 것을 말한다.


7. Realization

개념적 무언가를 실체화(구현) 하는 것을 말한다.


8. Association

배우다 보면 알 것 같다.


9. Dependency

모르겠는데 의존적인 느낌, 어느 객체가 다른 객체에 종속적인 느낌일듯.


10. Polymorphism

상위의 일반적인 객체는 하위의 객체가 모두 보유한 특성이기에 하위 클래스를 인스턴스화 및 상위에 대입하여 사용 가능하다.


11. Encapsulation / 절차은닉 / 정보은닉

캡슐화란 어떠한 객체가 가진 특징 및 상황에 따라 객체의 정보를 전부, 일부 공개, 비공개 하는 행위이다.
현실 세계와 같이 감추고 싶은건 감출 수 있게 만드는 행위로 간주된다.

예.) 나의 개인 정보 라는 객체는 낯선 타인에게는 알려주지 않고, 가족이나 친구에게는 공개할 수 있다.